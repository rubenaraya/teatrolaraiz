@use "sass:map";

// ----------------------------------------------
// Colores base
$color-base: map.get($theme-colors, $color-tema) !default;
$paleta-basica: generar-paleta-basica($color-base) !default;
$escala-monocromatica: crear-escala-monocromatica($color-base) !default;
$escala-saturacion: crear-escala-saturacion($color-base) !default;
$escala-multicolor: crear-escala-multicolor($color-base) !default;

@if ($color-primary != '') {
    $colores-personalizados: (
        'primary': $color-primary,
    );
    $theme-colors: map-merge($theme-colors, $colores-personalizados);
    $paleta-basica: map-merge($paleta-basica, $colores-personalizados);
}
$paleta-ampliada: generar-paleta-ampliada($color-base);

// ----------------------------------------------
// Predeterminados (si no se han establecido)
$fuente-base: Verdana, Geneva, Tahoma, sans-serif !default;
$talla-base: 1rem !default;

// ----------------------------------------------
// Valores Calculados
$fondo: $color-base;
$texto: color-contrast($color-base);
$color-sombra-fondo: color-contrast($fondo);
$color-sombra-fondo-rgb: to-rgb($color-sombra-fondo);
$color-inverso: map-get($paleta-ampliada, 'inverso');
$color-secondary: map-get($paleta-basica, 'secondary');
$fondo-light: map-get($paleta-basica, 'light');
$texto-light: color-contrast($fondo-light);

$color-separador: map-get($escala-monocromatica, 'mono-350');
$color-separador-destacado: map-get($escala-monocromatica, 'mono-200');
@if evaluar-color($fondo) == 'claro' {
    $color-separador: map-get($escala-monocromatica, 'mono-650');
    $color-separador-destacado: map-get($escala-monocromatica, 'mono-800');
}

@include variables-css((
    fuente-base: $fuente-base,
    talla-base: $talla-base,
    fondo: $color-base,
    fondo-rgb: to-rgb($fondo),
    texto: $texto,
    texto-rgb: to-rgb($texto),
    fondo-light: $fondo-light,
    fondo-light-rgb: to-rgb($fondo-light),
    texto-light: $texto-light,
    texto-light-rgb: to-rgb($texto-light),
    color-secondary: $color-secondary,
    color-secondary-rgb: to-rgb($color-secondary),
    color-mono-1: map-get($escala-monocromatica, 'mono-100'),
    color-mono-2: map-get($escala-monocromatica, 'mono-200'),
    color-mono-3: map-get($escala-monocromatica, 'mono-350'),
    color-mono-4: map-get($escala-monocromatica, 'mono-650'),
    color-mono-5: map-get($escala-monocromatica, 'mono-800'),
    color-mono-6: map-get($escala-monocromatica, 'mono-900'),
    color-satu-1: map-get($escala-saturacion, 'satu-100'),
    color-satu-2: map-get($escala-saturacion, 'satu-250'),
    color-satu-3: map-get($escala-saturacion, 'satu-400'),
    color-satu-4: map-get($escala-saturacion, 'satu-600'),
    color-satu-5: map-get($escala-saturacion, 'satu-750'),
    color-satu-6: map-get($escala-saturacion, 'satu-900'),
    color-triad-1: map-get($paleta-ampliada, 'triad-1'),
    color-triad-2: map-get($paleta-ampliada, 'triad-2'),
    color-cuad-1: map-get($paleta-ampliada, 'cuad-1'),
    color-cuad-2: map-get($paleta-ampliada, 'cuad-2'),
    color-tetra-1: map-get($paleta-ampliada, 'tetra-1'),
    color-tetra-2: map-get($paleta-ampliada, 'tetra-2'),
    color-analo-1: map-get($paleta-ampliada, 'analo-1'),
    color-analo-2: map-get($paleta-ampliada, 'analo-2'),
    color-comp-1: map-get($paleta-ampliada, 'comp-1'),
    color-comp-2: map-get($paleta-ampliada, 'comp-2'),
    color-inverso: $color-inverso,
    color-inverso-rgb: to-rgb($color-inverso),
    color-sombra-fondo: $color-sombra-fondo,
    color-sombra-fondo-rgba: RGBA(($color-sombra-fondo-rgb), .15),

    fondo2: cambiar-luminosidad($fondo, 50%),
    fondo2-rgb: to-rgb(cambiar-luminosidad($fondo, 50%)),
    texto2: color-contrast(cambiar-luminosidad($fondo, 50%)),
    texto2-rgb: to-rgb(color-contrast(cambiar-luminosidad($fondo, 50%))),
    fondo3: cambiar-luminosidad($fondo, 70%),
    fondo3-rgb: to-rgb(cambiar-luminosidad($fondo, 70%)),
    texto3: color-contrast(cambiar-luminosidad($fondo, 70%)),
    texto3-rgb: to-rgb(color-contrast(cambiar-luminosidad($fondo, 70%))),

    color-separador: $color-separador,
    color-separador-destacado: $color-separador-destacado,
    color-separador-rgb: to-rgb($color-separador),
    color-separador-destacado-rgb: to-rgb($color-separador-destacado),
));

@mixin configurar-tema() {
    --bs-body-font-family: #{var-css(fuente-base)};
    --bs-body-font-size: #{var-css(talla-base)};
    --bs-body-color: #{var-css(texto)};
    --bs-body-color-rgb: #{var-css(texto-rgb)};
    --bs-body-bg: #{var-css(fondo)};
    --bs-body-bg-rgb: #{var-css(fondo-rgb)};
    --bs-box-shadow: 0 0.5rem 1rem #{var-css(color-sombra-fondo-rgba)};
    --bs-box-shadow-sm: 0 0.1rem .5rem #{var-css(color-sombra-fondo-rgba)};
    --bs-box-shadow-lg: 0 0.25rem 2rem #{var-css(color-sombra-fondo-rgba)};
    --bs-box-shadow-inset: inset 0 1px 2px #{var-css(color-sombra-fondo-rgba)};
    --bs-border-color: #{var-css(color-separador)};
    --bs-secondary-color: #{var-css(color-secondary)};
    --bs-secondary-color-rgb: #{var-css(color-secondary-rgb)};

    --bs-secondary-bg: #{var-css(fondo2)};
    --bs-secondary-bg-rgb: #{var-css(fondo2-rgb)};
    --bs-tertiary-color: #{var-css(texto3)};
    --bs-tertiary-color-rgb: #{var-css(texto3-rgb)};
    --bs-tertiary-bg: #{var-css(fondo3)};
    --bs-tertiary-bg-rgb: #{var-css(fondo3-rgb)};
  
    @each $color, $value in $paleta-basica {
        --bs-#{$color}: #{$value};
        --bs-#{$color}-rgb: #{to-rgb($value)};
        --bs-#{$color}-text-emphasis: #{cambiar-luminosidad($value, -20%)};

        --bs-#{$color}-bg-subtle: #{cambiar-luminosidad($value, 80%)};
        --bs-#{$color}-border-subtle: #{cambiar-luminosidad($value, 50%)};

        .bg-#{$color} {
            background-color: $value !important;
        }
        .text-#{$color} {
            color: $value !important;
        }
        .text-bg-#{$color} {
            background-color: $value !important;
            color: color-contrast($value) !important;
        }
        .btn-#{$color} {
            @include button-variant($value, $value);
        }
        .btn-outline-#{$color} {
            @include button-outline-variant($value);
        }
    }
    @each $state in map-keys($paleta-basica) {
        .list-group-item-#{$state} {
            --bs-list-group-color: var(--bs-#{$state}-text-emphasis);
            --bs-list-group-action-hover-color: var(--bs-#{$state}-text-emphasis);
            --bs-list-group-action-active-color: var(--bs-#{$state}-text-emphasis);
            --bs-list-group-active-color: var(--bs-#{$state}-text-emphasis);
            --bs-list-group-border-color: #{var-css(color-separador)};
            --bs-list-group-active-border-color: #{var-css(color-separador)};
        }
    }
    @each $color, $value in $paleta-ampliada {
        .text-bg-#{$color} {
            background-color: $value !important;
            color: color-contrast($value) !important;
        }
    }

    @each $key, $value in $escala-monocromatica {
        .escala-#{$key} {
            background-color: $value !important;
            color: color-contrast($value);
        }
    }
    @each $key, $value in $escala-saturacion {
        .escala-#{$key} {
            background-color: $value !important;
            color: color-contrast($value);
        }
    }
    @each $key, $value in $escala-multicolor {
        .escala-#{$key} {
            background-color: $value !important;
            color: color-contrast($value);
        }
    }

    .nav-tabs {
        --bs-nav-tabs-border-color: #{var-css(color-separador)};
        --bs-nav-tabs-link-hover-border-color: #{var-css(color-separador-destacado)} #{var-css(color-separador-destacado)} transparent;
        --bs-nav-tabs-link-active-border-color: #{var-css(color-separador)} #{var-css(color-separador)} transparent;
        --bs-nav-link-color: #{var-css(texto)};
        --bs-nav-link-hover-color: #{var-css(texto)};
        --bs-nav-tabs-link-active-color: #{var-css(texto-light)};
        --bs-nav-tabs-link-active-bg: #{var-css(fondo-light)};
    }

}

@include configurar-tema();
