@use "sass:map";

@mixin variables-css($css_variables, $prefix: tema) {
    @each $name, $value in $css_variables {
        --#{$prefix}-#{$name}: #{$value};
    }
}

@function var-css($name, $prefix: tema) {
    @return var(--#{$prefix}-#{$name});
}

@mixin asignar-var-css($name, $value: '', $prefix: tema) {
    --#{$prefix}-#{$name}: #{$value};
}

@function evaluar-color($color) {
    @if contrast-ratio($color, $white) > $min-contrast-ratio {
        @return 'oscuro';
    } @else {
        @return 'claro';
    }
}

@function cambiar-saturacion($color, $cantidad) {
    $gray: mix(black, white, 50%);
    @return mix($color, $gray, $cantidad);
}

@function cambiar-luminosidad($color, $weight) {
    @if evaluar-color($color) == 'oscuro' {
        @return if($weight > 0, mix($color, black, $weight), mix($color, white, -$weight));
    } @else {
        @return if($weight > 0, mix($color, white, $weight), mix($color, black, -$weight));
    }
}

@function cambiar-matiz($color, $degrees) {
    @return hsl(hue($color) + $degrees, saturation($color), lightness($color));
}

@function ajustar-matiz-al-tema($color, $target-hue) {
    $current-hue: hue($color);
    $hue-difference: $target-hue - $current-hue;
    @if abs($hue-difference) > 180 {
        $hue-difference: $hue-difference - 360 * if($hue-difference > 0, -1, 1);
    }
    @return cambiar-matiz($color, $hue-difference);
}

@function crear-escala-multicolor($color) {
    $scale: ();
    $increment: 15;
    $base-level: 500;
    $steps: 9;
    @for $i from -$steps through $steps {
        @if $i != 0 {
            $adjusted-color: adjust-hue($color, $increment * $i);
            $nivel: $base-level - $i * 50;
            $scale: map-merge($scale, ('multi-' + $nivel: $adjusted-color));
        }
    }
    $scale: map-merge($scale, ('multi-' + $base-level: $color));
    @return $scale;
}

@function crear-escala-monocromatica($color) {
    $scale: ();
    $lightness: lightness($color);
    @for $i from 1 through 9 {
        $new-color: mix($color, white, 10% * $i);
        $scale: map-merge($scale, ('mono-' + (50 + ($i - 1) * 50): $new-color));
    }
    $scale: map-merge($scale, ('mono-500': $color));
    @for $i from 1 through 9 {
        $new-color: mix($color, black, 10% * $i);
        $scale: map-merge($scale, ('mono-' + (950 - ($i - 1) * 50): $new-color));
    }
    @return $scale;
}

@function crear-escala-saturacion($color) {
    $scale: ();
    $base-level: 500;
    $incremento-saturacion: 10%;
    @for $i from 1 through 9 {
        $color-saturado: saturate($color, $incremento-saturacion * $i);
        $color-desaturado: desaturate($color, $incremento-saturacion * $i);
        $scale: map-merge($scale, (
            'satu-' + ($base-level - $i * 50): $color-desaturado,
            'satu-' + ($base-level + $i * 50): $color-saturado
        ));
    }
    $scale: map-merge($scale, ('satu-500': $color));
    @return $scale;
}

@function generar-paleta-basica($color) {
    $light-color: lighten($color, 10%);
    $dark-color: darken($color, 10%);
    $primary-color: saturate($light-color, 50%);
    $secondary-color: desaturate($dark-color, 50%);
    $danger-color: saturate(lighten(ajustar-matiz-al-tema($color, 0), 10%), 10%);
    $success-color: desaturate(lighten(ajustar-matiz-al-tema($color, 120), 10%), 10%);
    $info-color: desaturate(lighten(ajustar-matiz-al-tema($color, 240), 10%), 10%);
    $warning-color: saturate(lighten(ajustar-matiz-al-tema($color, 60), 10%), 10%);
    @if evaluar-color($color) == 'claro' {
        $danger-color: saturate(ajustar-matiz-al-tema($color, 0), 10%);
        $success-color: desaturate(ajustar-matiz-al-tema($color, 120), 10%);
        $info-color: desaturate(ajustar-matiz-al-tema($color, 240), 10%);
        $warning-color: saturate(ajustar-matiz-al-tema($color, 60), 10%);
    }
    @return (
        'primary': $primary-color,
        'secondary': $secondary-color,
        'success': $success-color,
        'info': $info-color,
        'warning': $warning-color,
        'danger': $danger-color,
        'light': $light-color,
        'dark': $dark-color,
    );
}

@function generar-paleta-ampliada($color) {
    $analo-1: cambiar-matiz($color, 30deg);
    $analo-2: cambiar-matiz($color, -30deg);
    $triad-1: cambiar-matiz($color, 120deg);
    $triad-2: cambiar-matiz($color, 240deg);
    $inverso: cambiar-matiz($color, 180deg);
    $comp-1: cambiar-matiz($inverso, 30deg);
    $comp-2: cambiar-matiz($inverso, -30deg);
    $tetra-1: cambiar-matiz($color, 60deg);
    $tetra-2: cambiar-matiz($color, -60deg);
    $cuad-1: cambiar-matiz($color, 90deg);
    $cuad-2: cambiar-matiz($color, -90deg);
    @return (
        'analo-1': $analo-1,
        'analo-2': $analo-2,
        'triad-1': $triad-1,
        'triad-2': $triad-2,
        'tetra-1': $tetra-1,
        'tetra-2': $tetra-2,
        'base': $color,
        'inverso': $inverso,
        'cuad-1': $cuad-1,
        'cuad-2': $cuad-2,
        'comp-1': $comp-1,
        'comp-2': $comp-2,
    );
}
