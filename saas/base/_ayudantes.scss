@use "sass:map";

@function convertir-hex-rgba($color, $opacidad: .5) {
    @return RGBA(to-rgb($color), $opacidad);
}

@function evaluar-color($color) {
    @if contrast-ratio($color, $white) > $min-contrast-ratio {
        @return 'oscuro';
    } @else {
        @return 'claro';
    }
}

@function cambiar-saturacion($color, $cantidad) {
    $gray: mix(black, white, 50%);
    @return mix($color, $gray, $cantidad);
}

@function cambiar-luminosidad($color, $weight) {
    @if evaluar-color($color) == 'oscuro' {
        @return if($weight > 0, mix($color, black, $weight), mix($color, white, -$weight));
    } @else {
        @return if($weight > 0, mix($color, white, $weight), mix($color, black, -$weight));
    }
}

@function cambiar-matiz($color, $degrees) {
    @return hsl(hue($color) + $degrees, saturation($color), lightness($color));
}

@function ajustar-matiz-al-tema($color, $target-hue) {
    $current-hue: hue($color);
    $hue-difference: $target-hue - $current-hue;
    @if abs($hue-difference) > 180 {
        $hue-difference: $hue-difference - 360 * if($hue-difference > 0, -1, 1);
    }
    @return cambiar-matiz($color, $hue-difference);
}

@function crear-escala-multicolor($color) {
    $scale: ();
    $increment: 15;
    $base-level: 500;
    $steps: 9;
    @for $i from -$steps through $steps {
        @if $i != 0 {
            $adjusted-color: adjust-hue($color, $increment * $i);
            $nivel: $base-level - $i * 50;
            $scale: map-merge($scale, ('multi-' + $nivel: $adjusted-color));
        }
    }
    $scale: map-merge($scale, ('multi-' + $base-level: $color));
    @return $scale;
}

@function crear-escala-monocromatica($color) {
    $scale: ();
    $lightness: lightness($color);
    @for $i from 1 through 9 {
        $new-color: mix($color, white, 10% * $i);
        $scale: map-merge($scale, ('mono-' + (50 + ($i - 1) * 50): $new-color));
    }
    $scale: map-merge($scale, ('mono-500': $color));
    @for $i from 1 through 9 {
        $new-color: mix($color, black, 10% * $i);
        $scale: map-merge($scale, ('mono-' + (950 - ($i - 1) * 50): $new-color));
    }
    @return $scale;
}

@function crear-escala-saturacion($color) {
    $scale: ();
    $base-level: 500;
    $incremento-saturacion: 10%;
    @for $i from 1 through 9 {
        $color-saturado: saturate($color, $incremento-saturacion * $i);
        $color-desaturado: desaturate($color, $incremento-saturacion * $i);
        $scale: map-merge($scale, (
            'satu-' + ($base-level - $i * 50): $color-desaturado,
            'satu-' + ($base-level + $i * 50): $color-saturado
        ));
    }
    $scale: map-merge($scale, ('satu-500': $color));
    @return $scale;
}

@function generar-paleta-monocromatica($color) {
    $escala-monocromatica: crear-escala-monocromatica($color);
    @return (
        'mono-1': map-get($escala-monocromatica, 'mono-100'),
        'mono-2': map-get($escala-monocromatica, 'mono-200'),
        'mono-3': map-get($escala-monocromatica, 'mono-350'),
        'mono-4': map-get($escala-monocromatica, 'mono-500'),
        'mono-5': map-get($escala-monocromatica, 'mono-650'),
        'mono-6': map-get($escala-monocromatica, 'mono-800'),
        'mono-7': map-get($escala-monocromatica, 'mono-900'),
    );
}

@function generar-paleta-saturacion($color) {
    $escala-saturacion: crear-escala-saturacion($color);
    @return (
        'satu-1': map-get($escala-saturacion, 'satu-100'),
        'satu-2': map-get($escala-saturacion, 'satu-200'),
        'satu-3': map-get($escala-saturacion, 'satu-400'),
        'satu-4': map-get($escala-saturacion, 'satu-500'),
        'satu-5': map-get($escala-saturacion, 'satu-600'),
        'satu-6': map-get($escala-saturacion, 'satu-750'),
        'satu-7': map-get($escala-saturacion, 'satu-900'),
    );
}

@function generar-paleta-ampliada($color) {
    $fondo: desaturate(lighten($color, 20%), 20%);
    @return (
        'fondo':        $fondo,
        'fondo2':       cambiar-luminosidad($fondo, 60%),
        'fondo3':       cambiar-luminosidad($fondo, 30%),
        'analo-1':      cambiar-matiz($color, 30deg),
        'analo-2':      cambiar-matiz($color, -30deg),
        'triad-1':      cambiar-matiz($color, 120deg),
        'triad-2':      cambiar-matiz($color, 240deg),
        'tetra-1':      cambiar-matiz($color, 60deg),
        'tetra-2':      cambiar-matiz($color, -60deg),
        'cuad-1':       cambiar-matiz($color, 90deg),
        'cuad-2':       cambiar-matiz($color, -90deg),
        'inverso':      cambiar-matiz($color, 180deg),
        'comp-1':       cambiar-matiz(cambiar-matiz($color, 180deg), 30deg),
        'comp-2':       cambiar-matiz(cambiar-matiz($color, 180deg), -30deg),
        'accent':       saturate(darken($color, 10%), 50%),
        'highlight':    saturate(lighten($color, 15%), 25%),
        'gray':         $gray-600,
        'white':        $white,
        'black':        $black,
    );
}

@function generar-paleta-basica($color) {
    $danger:    ajustar-matiz-al-tema($color, 0);
    $success:   ajustar-matiz-al-tema($color, 120);
    $info:      ajustar-matiz-al-tema($color, 240);
    $warning:   ajustar-matiz-al-tema($color, 60);
    @if evaluar-color($color) == 'oscuro' {
        $danger:    lighten($danger, 10%);
        $success:   lighten($success, 10%);
        $info:      lighten($info, 10%);
        $warning:   lighten($warning, 10%);
    }
    @return (
        'primary':      $color,
        'light':        lighten($color, 25%),
        'dark':         darken($color, 20%),
        'secondary':    desaturate(darken($color, 10%), 50%),
        'success':      desaturate($success, 10%),
        'info':         desaturate($info, 10%),
        'warning':      saturate($warning, 10%),
        'danger':       saturate($danger, 10%),
    );
}

@function generar-configuracion($paleta-basica, $paleta-ampliada, $paleta-monocromatica, $paleta-saturacion) {
    $fondo: map-get($paleta-ampliada, 'fondo');
    $fondo2: cambiar-luminosidad($fondo, 30%);
    $fondo3: cambiar-luminosidad($fondo, 60%);
    $enlace: color-contrast($fondo);
    $enlace2: lighten(color-contrast($fondo), 50%);
    $borde: map-get($paleta-monocromatica, 'mono-6');
    $borde2: map-get($paleta-monocromatica, 'mono-7');
    $separador: map-get($paleta-monocromatica, 'mono-6');
    $titulo: map-get($paleta-monocromatica, 'mono-7');
    $titulo2: map-get($paleta-monocromatica, 'mono-1');
    $fondo-menu: darken($fondo, 10%);
    $fondo-menu2: darken($fondo, 50%);
    @if evaluar-color($fondo) == 'oscuro' {
        $enlace2: darken(color-contrast($fondo), 20%);
        $borde: map-get($paleta-monocromatica, 'mono-2');
        $borde2: map-get($paleta-monocromatica, 'mono-1');
        $separador: map-get($paleta-monocromatica, 'mono-2');
        $titulo: map-get($paleta-monocromatica, 'mono-1');
        $titulo2: map-get($paleta-monocromatica, 'mono-7');
        $fondo-menu: lighten($fondo, 10%);
        $fondo-menu2: lighten($fondo, 50%);
   }
    @return (
        fuente-base:            'Verdana, Geneva, Tahoma, sans-serif',
        talla-base:             1rem,
        separador:              $separador,
        borde:                  $borde,
        borde2:                 $borde2,
        titulo:                 $titulo,
        titulo2:                $titulo2,
        enlace:                 $enlace,
        enlace2:                $enlace2,
        fondo-menu:             $fondo-menu,
        fondo-menu2:            $fondo-menu2,
        fondo:                  $fondo,
        fondo2:                 $fondo2,
        fondo3:                 $fondo3,
        texto:                  color-contrast($fondo),
        texto2:                 color-contrast($fondo2),
        texto3:                 color-contrast($fondo3),
        paleta-basica:          $paleta-basica,
        paleta-ampliada:        $paleta-ampliada,
        paleta-monocromatica:   $paleta-monocromatica,
        paleta-saturacion:      $paleta-saturacion,
    );
}

@mixin configurar-tema($config) {
    --bsia-sombra-rgba:         #{map-get($config, convertir-hex-rgba(map-get($config, texto)))};
    --bsia-separador:           #{map-get($config, separador)};
    --bsia-borde:               #{map-get($config, borde)};
    --bsia-borde2:              #{map-get($config, borde2)};
    --bsia-titulo:              #{map-get($config, titulo)};
    --bsia-titulo2:             #{map-get($config, titulo2)};

    --bs-body-font-family:      #{map-get($config, fuente-base)};
    --bs-body-font-size:        #{map-get($config, talla-base)};
    --bs-body-bg:               #{map-get($config, fondo)};
    --bs-body-bg-rgb:           #{to-rgb(map-get($config, fondo))};
    --bs-body-color:            #{map-get($config, texto)};
    --bs-body-color-rgb:        #{to-rgb(map-get($config, texto))};
    --bs-emphasis-color:        #{map-get($config, texto)};
    --bs-emphasis-color-rgb:    #{to-rgb(map-get($config, texto))};
    --bs-link-color:            #{map-get($config, enlace)};
    --bs-link-color-rgb:        #{to-rgb(map-get($config, enlace))};
    --bs-link-hover-color:      #{map-get($config, enlace2)};
    --bs-link-hover-color-rgb:  #{to-rgb(map-get($config, enlace2))};
    --bs-secondary-bg:          #{map-get($config, fondo2)};
    --bs-secondary-bg-rgb:      #{to-rgb(map-get($config, fondo2))};
    --bs-secondary-color:       #{map-get($config, texto2)};
    --bs-secondary-color-rgb:   #{to-rgb(map-get($config, texto2))};
    --bs-tertiary-bg:           #{map-get($config, fondo3)};
    --bs-tertiary-bg-rgb:       #{to-rgb(map-get($config, fondo3))};
    --bs-tertiary-color:        #{map-get($config, texto3)};
    --bs-tertiary-color-rgb:    #{to-rgb(map-get($config, texto3))};
    --bs-border-color:          #{map-get($config, borde)};
    --bs-box-shadow-sm:         0 0.125rem .25rem #{convertir-hex-rgba(map-get($config, texto), 0.3)};
    --bs-box-shadow:            0 0.5rem 1rem #{convertir-hex-rgba(map-get($config, texto), 0.4)};
    --bs-box-shadow-lg:         0 1rem 3rem #{convertir-hex-rgba(map-get($config, texto), 0.5)};
    --bs-box-shadow-inset:      inset 0 1px 2px #{convertir-hex-rgba(map-get($config, texto), 0.25)};
    --bs-focus-ring-color:      #{convertir-hex-rgba(map-get(map-get($config, paleta-basica), 'primary'), 0.25)};
    --bs-focus-ring-width: 0.25rem;
    --bs-focus-ring-opacity: 0.25;
    --bs-border-color-translucent: #{convertir-hex-rgba(map-get($config, texto))};

    @each $nombre, $valor in map-get($config, paleta-basica) {
        --bs-#{$nombre}:                #{$valor};
        --bs-#{$nombre}-rgb:            #{to-rgb($valor)};
        --bs-#{$nombre}-text-emphasis:  #{cambiar-luminosidad($valor, -20%)};
        --bs-#{$nombre}-bg-subtle:      #{cambiar-luminosidad($valor, 80%)};
        --bs-#{$nombre}-border-subtle:  #{cambiar-luminosidad($valor, 50%)};
        .list-group-item-#{$nombre} {
            --bs-list-group-color:                  var(--bs-#{$nombre}-text-emphasis);
            --bs-list-group-action-hover-color:     var(--bs-#{$nombre}-text-emphasis);
            --bs-list-group-action-active-color:    var(--bs-#{$nombre}-text-emphasis);
            --bs-list-group-active-color:           var(--bs-#{$nombre}-text-emphasis);
            --bs-list-group-border-color:           #{map-get($config, borde)};
            --bs-list-group-active-border-color:    #{map-get($config, borde)};
        }
        .bg-#{$nombre} {
            background-color: $valor !important;
        }
        .text-#{$nombre} {
            color: $valor !important;
        }
        .text-bg-#{$nombre} {
            background-color:   $valor !important;
            color:              color-contrast($valor) !important;
        }
        .btn-#{$nombre} {
            @include button-variant($valor, $valor);
        }
        .btn-outline-#{$nombre} {
            @include button-outline-variant($valor);
        }
    }
    @each $nombre, $valor in map-get($config, paleta-ampliada) {
        --bsia-#{$nombre}: #{$valor};
        .text-bg-#{$nombre} {
            background-color:   $valor !important;
            color:              color-contrast($valor) !important;
        }
    }
    @each $nombre, $valor in map-get($config, paleta-monocromatica) {
        --bsia-#{$nombre}: #{$valor};
        .text-bg-#{$nombre} {
            background-color:   $valor !important;
            color:              color-contrast($valor) !important;
        }
    }
    @each $nombre, $valor in map-get($config, paleta-saturacion) {
        .text-bg-#{$nombre} {
            background-color:   $valor !important;
            color:              color-contrast($valor) !important;
        }
    }
    .dropdown-menu {
        --bs-dropdown-color:                #{color-contrast(map-get($config, fondo-menu))};
        --bs-dropdown-bg:                   #{map-get($config, fondo-menu)};
        --bs-dropdown-link-color:           #{color-contrast(map-get($config, fondo-menu))};
        --bs-dropdown-link-hover-bg:        #{map-get($config, fondo-menu2)};
        --bs-dropdown-link-hover-color:     #{color-contrast(map-get($config, fondo-menu2))};
        --bs-dropdown-link-active-bg:       #{map-get(map-get($config, paleta-ampliada), 'accent')};
        --bs-dropdown-link-active-color:    #{color-contrast(map-get(map-get($config, paleta-ampliada), 'accent'))};
    }
    .nav-tabs {
        --bs-nav-link-color:                    #{map-get($config, texto)};
        --bs-nav-link-hover-color:              #{map-get($config, texto)};
        --bs-nav-tabs-link-active-bg:           #{map-get(map-get($config, paleta-ampliada), 'highlight')};
        --bs-nav-tabs-link-active-color:        #{color-contrast(map-get(map-get($config, paleta-ampliada), 'highlight'))};

        --bs-nav-tabs-border-color:             #{map-get($config, borde)};
        --bs-nav-tabs-link-active-border-color: #{map-get($config, borde)} #{map-get($config, borde)} transparent;
        --bs-nav-tabs-link-hover-border-color:  #{map-get($config, borde2)} #{map-get($config, borde2)} transparent;
    }
}
